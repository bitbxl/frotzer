name: Frotzer_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GIST_ID: 554394d67973a35b66f7b60a24fa0950
  # constants
  build_fail_color: FF0000
  test_filename: frotzer-test.json
  test_label: Tests
  test_success_color: 00FF00
  test_fail_color: FF0000
  # status (to be checked and/or set at each job run)
  build_linux_status: OK
  build_macos_status: OK
  build_status: OK
  test_status: passing
  test_color: env.test_success_color
  
jobs:

  build:
    name: Build (${{ matrix.os }})

    runs-on: ${{ matrix.os }}

    env:
      # status (to be checked and/or set at each job run)
      build_color: ${{ matrix.build_success_color }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-18.04]
        node-version: [12.x, 14.x]
        include:
          - os: ubuntu-latest
            # constants (ubuntu)
            build_command: "make -C frotz/ dumb"
            build_filename: frotzer-linux-build.json
            build_label: Linux build
            build_success_color: e95420
           
          - os: ubuntu-18.04
            # constants (macOS)
            build_command: "make -C frotz/ dumb"
            build_filename: frotzer-macos-build.json
            build_label: macOS build
            build_success_color: 000000
            
    steps:
      - name: Clone repositories
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
     
#      - name: Build dumb frotz for ${{ matrix.os }}
#        run: |
#          if ${{ matrix.build_command }} ; then
#            echo "build_status=passing" >> $GITHUB_ENV
#            echo "build_color=${{ matrix.badge_success_color }}" >> $GITHUB_ENV
#          else
#            echo "build_status=failing" >> $GITHUB_ENV
#            echo "build_color=${{ env.build_fail_color }}" >> $GITHUB_ENV
#            exit 1
#          fi       

      - name: Build dumb frotz and frotzer deps on ${{ matrix.os }}
        run: |
          ${{ matrix.build_command }}
    
      - name: Set build badge values (Linux)
        if: ${{ failure() && contains(matrix.os, 'ubuntu') && env.build_linux_status=='OK' }}
        run: |
          echo "env.build_linux_status=NOK" >> $GITHUB_ENV
          echo "build_status=NOK" >> $GITHUB_ENV
          echo "build_color=${{ env.build_fail_color }}" >> $GITHUB_ENV
          echo "test_status=failing" >> $GITHUB_ENV

      - name: Set build badge values (macOS)
        if: ${{ failure() && contains(matrix.os, '18') && env.build_macos_status=='OK' }}
        run: |
          echo "env.build_macos_status=NOK" >> $GITHUB_ENV
          echo "build_status=NOK" >> $GITHUB_ENV
          echo "build_color=${{ env.build_fail_color }}" >> $GITHUB_ENV
          echo "test_status=failing" >> $GITHUB_ENV
          
      - name: Test frotzer on ${{ matrix.os }}/${{ matrix.node-version }}
        if: ${{ success() }}
        run: |
          npm ci
          npm test

      - name: Set test badge values
        if: ${{ failure() &&  env.test_status=='passing'}}
        run: |
          echo "test_status=failing" >> $GITHUB_ENV
          echo "test_color=${{ env.test_fail_color }}" >> $GITHUB_ENV
          
      - name: Publish build badge
        if: ${{ always() }}
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.GIST_ID }}
          filename: ${{ matrix.build_filename }}
          label: ${{ matrix.build_label }}
          message: ${{ env.build_status }}
          color: ${{ env.build_color }}

      - name: Publish test badge
        if: ${{ always() }}
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.GIST_ID }}
          filename: ${{ env.test_filename }}
          label: ${{ env.test_label }}
          message: ${{ env.test_status }}
          color: ${{ env.test_color }}
