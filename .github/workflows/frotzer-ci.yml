name: Frotzer_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GIST_ID: 554394d67973a35b66f7b60a24fa0950
  build_fail_color: FF0000
  test_success_color: 00FF00
  test_fail_color: FF0000
  
jobs:

  build:
    name: Build (${{ matrix.os }}) (Node.js (${{ matrix.node-version }}) 

    runs-on: ${{ matrix.os }}

    env:
      build_status: failing
      build_color: ${{ matrix.badge_success_color }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-18.04]
        node-version: [12.x, 14.x]
        include:
          - os: ubuntu-latest
            build_command: "make -C frotz/ dumb"
            badge_filename: frotzer-linux-build.json
            badge_label: Linux build
            badge_success_color: e95420
           
          - os: ubuntu-18.04
            build_command: "make -C frotz/ dumb"
            badge_filename: frotzer-macos-build.json
            badge_label: macOS build
            badge_success_color: FFFFFF
            
    steps:
      - name: Clone repositories
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
     
#      - name: Build dumb frotz for ${{ matrix.os }}
#        run: |
#          if ${{ matrix.build_command }} ; then
#            echo "build_status=passing" >> $GITHUB_ENV
#            echo "build_color=${{ matrix.badge_success_color }}" >> $GITHUB_ENV
#          else
#            echo "build_status=failing" >> $GITHUB_ENV
#            echo "build_color=${{ env.build_fail_color }}" >> $GITHUB_ENV
#            exit 1
#          fi       

      - name: Set badge values (failing)
        if: ${{ failure() }}
        run: |
          echo "build_status=failing" >> $GITHUB_ENV
          echo "build_color=${{ env.build_fail_color }}" >> $GITHUB_ENV

      - name: Set badge values (success)
        if: ${{ success() }}
        run: |
          echo "build_status=passing" >> $GITHUB_ENV
          echo "build_color=${{ matrix.badge_success_color }}" >> $GITHUB_ENV
          
      - name: Create build badge
        if: ${{ always() }}
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ env.GIST_ID }}
          filename: ${{ matrix.badge_filename }}
          label: ${{ matrix.badge_label }}
          message: ${{ env.build_status }}
          color: ${{ env.build_color }}
